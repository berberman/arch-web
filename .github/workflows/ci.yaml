on:
  pull_request:
  push:
    branches: [master]
name: build
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc: ["9.8", "9.2"]
        os: [ubuntu-latest]

    name: ${{ matrix.os }} - GHC ${{ matrix.ghc }}
    steps:
      - uses: actions/checkout@v4

      - name: "Set up HLint"
        uses: haskell-actions/hlint-setup@v2

      - name: "Run HLint"
        uses: haskell-actions/hlint-run@v2
        with:
          path: src/
          fail-on: warning

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure the build
        run: |
          cabal configure --enable-tests
          cabal build all --dry-run

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies

      - name: Save cached dependencies
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}
      - name: Build and run tests
        run: |
          cabal build
          cabal test
